CMAKE_MINIMUM_REQUIRED(VERSION 3.20)
PROJECT(FreeImage)

# Determine Platform
IF(MSVC AND CMAKE_CL_64)
	SET(X64 1)
ELSEIF(CMAKE_SIZEOF_VOID_P MATCHES 8)
	SET(X64 1)
ENDIF()
IF(NOT MSVC AND X64)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
ENDIF()

# Project directories
FIND_PATH(PROJECT_DIR FreeImage.h PATHS src/)
SET(3RDPARTY_DIR ${PROJECT_DIR}/../3rdparty)
SET(PLUGIN_DIR ${PROJECT_DIR}/../plugin)

# FreeImage core
FILE(GLOB SOURCE_FILES ${PROJECT_DIR}/FreeImage/*.cpp ${PROJECT_DIR}/FreeImageToolkit/*.cpp)

SOURCE_GROUP("Source Files" FILES ${SOURCE_FILES})

ADD_DEFINITIONS(-DFREEIMAGE_EXPORTS)
ADD_LIBRARY(freeimage SHARED ${SOURCE_FILES})

SET(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)
IF(MSVC)
	ADD_DEFINITIONS(-D_SCL_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE)
	OPTION(FISHELLEXT "Build Sentire Context Menu Image Thumbnailer" OFF)
	IF(NOT X64)
		OPTION(SUSIE_PLUGIN "Build Susie plugin" OFF)
	ENDIF()
ELSE()
	ADD_DEFINITIONS(-D__ANSI__)
ENDIF()
OPTION(QT_PLUGIN "Build QT plugin" OFF)
OPTION(CONV_TEST "Build a simple convert test program" OFF)

SET(AWK OFF)
SET(BUILD_SHARED_LIBS OFF)
SET(WITH_GTEST OFF)
SET(ZLIB_ENABLE_TESTS OFF)
SET(ZLIBNG_ENABLE_TESTS OFF)
SET(ZLIB_COMPAT ON)
SET(ZLIBINCDIR ${CMAKE_BINARY_DIR}/3rdparty/zlib-ng)
SET(ZLIB_INCLUDE_DIR ${CMAKE_BINARY_DIR}/3rdparty/zlib-ng)
SET(ZLIB_LIBRARY zlibstatic)
ADD_LIBRARY(ZLIB::ZLIB INTERFACE IMPORTED)
SET(PNG_SHARED OFF)
SET(PNG_TESTS OFF)
SET(PNG_TOOLS OFF)
SET(PNG_EXECUTABLES OFF)
SET(WEBP_LINK_STATIC OFF)
SET(WEBP_BUILD_ANIM_UTILS OFF)
SET(WEBP_BUILD_CWEBP OFF)
SET(WEBP_BUILD_DWEBP OFF)
SET(WEBP_BUILD_GIF2WEBP OFF)
SET(WEBP_BUILD_IMG2WEBP OFF)
SET(WEBP_BUILD_VWEBP OFF)
SET(WEBP_BUILD_WEBPINFO OFF)
SET(WEBP_BUILD_LIBWEBPMUX ON)
SET(WEBP_BUILD_WEBPMUX OFF)
SET(WEBP_BUILD_EXTRAS OFF)
SET(WEBP_NEAR_LOSSLESS OFF)

OPTION(BUILD_TESTING "" OFF)
OPTION(JPEGXL_ENABLE_TOOLS "" OFF)
OPTION(JPEGXL_ENABLE_DOXYGEN "" OFF)
OPTION(JPEGXL_ENABLE_MANPAGES "" OFF)
OPTION(JPEGXL_ENABLE_BENCHMARK "" OFF)
OPTION(JPEGXL_ENABLE_EXAMPLES "" OFF)
OPTION(JPEGXL_ENABLE_JNI "" OFF)
OPTION(JPEGXL_ENABLE_OPENEXR "" OFF)
OPTION(JPEGXL_ENABLE_WASM_THREADS "" OFF)
OPTION(JPEGXL_ENABLE_SKCMS "" OFF)
OPTION(JPEGXL_ENABLE_SJPEG "" OFF)
OPTION(JPEGXL_ENABLE_TRANSCODE_JPEG "" OFF)
OPTION(JPEGXL_STATIC "" ON)
OPTION(JPEGXL_ENABLE_JPEGLI "" ON)
OPTION(JPEGXL_ENABLE_AVX512 "" ON)
OPTION(JPEGXL_ENABLE_AVX512_ZEN4 "" ON)
OPTION(JPEGXL_ENABLE_AVX512_SPR "" ON)
OPTION(HWY_SYSTEM_GTEST "" OFF)
OPTION(HWY_ENABLE_INSTALL "" OFF)
OPTION(HWY_TEST_STANDALONE "" OFF)

ADD_SUBDIRECTORY(plugin)
ADD_SUBDIRECTORY(${3RDPARTY_DIR}/zlib-ng)
ADD_SUBDIRECTORY(${3RDPARTY_DIR}/libjxr)
ADD_SUBDIRECTORY(${3RDPARTY_DIR}/libpng)
ADD_SUBDIRECTORY(${3RDPARTY_DIR}/libtiff)
ADD_SUBDIRECTORY(${3RDPARTY_DIR}/libwebp)
ADD_SUBDIRECTORY(${3RDPARTY_DIR}/libjxl)

TARGET_LINK_LIBRARIES(freeimage libjxr zlibstatic png_static jpegli-static jpegli-libjpeg-obj libtiff webpdecoder webp libwebpmux webpdemux jxl jxl_threads)

INCLUDE_DIRECTORIES(
	${PROJECT_DIR}
	${3RDPARTY_DIR}/libjxr/common
	${3RDPARTY_DIR}/libjxr/common/include
	${3RDPARTY_DIR}/libjxr/image/sys
	${3RDPARTY_DIR}/libjxr/image/x86
	${3RDPARTY_DIR}/libjxr/jxrgluelib
	${3RDPARTY_DIR}/zlib-ng
	${3RDPARTY_DIR}/libpng
	${3RDPARTY_DIR}/libjxl/third_party/libjpeg-turbo
	${3RDPARTY_DIR}/libtiff/libtiff
	${3RDPARTY_DIR}/libwebp/src
	${CMAKE_BINARY_DIR}/3rdparty/zlib-ng
	${CMAKE_BINARY_DIR}/3rdparty/libpng
	${CMAKE_BINARY_DIR}/3rdparty/libjxl/lib/include
	${CMAKE_BINARY_DIR}/3rdparty/libjxl/lib/include/jpegli
	${CMAKE_BINARY_DIR}/3rdparty/libtiff
)

IF(MSVC AND NOT X64)
	SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SAFESEH:NO")
ENDIF()

IF(WIN32)
	SET_TARGET_PROPERTIES(freeimage PROPERTIES OUTPUT_NAME "FreeImage")
	SET_TARGET_PROPERTIES(freeimage PROPERTIES PREFIX "")
ENDIF()

INSTALL(TARGETS freeimage
	RUNTIME DESTINATION bin
	LIBRARY DESTINATION lib
)

INSTALL(FILES
	${PROJECT_DIR}/FreeImage.h
	DESTINATION include
)
